%% Generated by the protocol buffer compiler.  DO NOT EDIT!

-record(m_friend_invite_tos, {dest_roleid}).
-record(m_friend_invite_toc, {succ=true, return_self=true, reason, from_roleid, from_rolename}).
-record(m_friend_accept_tos, {from_roleid}).
-record(m_friend_accept_toc, {succ=true, return_self=true, reason, dest_roleid, dest_rolename}).
-record(m_friend_list_tos, {}).
-record(m_friend_list_toc, {succ=true, return_self=true, reason, friendlist}).
-record(m_friend_bad_add_tos, {roleid}).
-record(m_friend_bad_add_toc, {succ=true, return_self=true, reason}).
-record(m_friend_bad_list_tos, {}).
-record(m_friend_bad_list_toc, {succ=true, return_self=true, reason, blacklist}).
-record(m_friend_enemy_add_tos, {roleid}).
-record(m_friend_enemy_add_toc, {succ=true, return_self=true, reason}).
-record(m_friend_enemy_list_tos, {}).
-record(m_friend_enemy_list_toc, {succ=true, return_self=true, reason, enemylist}).
-record(p_role_server_status, {roleinfo, lastpath}).
-record(p_role_status_list, {role_status}).
-record(p_game_role_disply, {type, value}).
-record(p_game_role, {roleid, rolename, sex, skinid, vwid, x, y, disply}).
-record(p_role_list, {role}).
-record(p_role_attr, {roleid, rolename, account_name, create_time, status, last_login_time, exp, level, hp, mp, attack, defence, aglie, max_hp, max_mp, max_attack, max_defence, max_aglie, equip1, equip2, equip3, equip4, equip5, equip6, equip7, equip8, skill1, skill2, skill3, skill4, skill5, skill6, skill7, skill8}).
-record(p_item_attr, {itemid, itemname, quality, consumable, damagable, tradable, reclaimable, reclaim_price}).
-record(p_equip_attr, {equipid, equipname, quality, slot_num, fineness, gem_count, consumable, damagable, tradable, reclaimable, reclaim_price}).
-record(m_login_flash_login_tos, {account_name, account_pwd}).
-record(m_login_flash_login_toc, {succ=true, reason, result}).
-record(m_role_list_toc, {succ=true, reason, result}).
-record(m_role_add_tos, {rolename, sex, skinid}).
-record(m_role_add_toc, {succ=true, reason, result}).
-record(m_role_del_tos, {roleid}).
-record(m_role_del_toc, {succ=true, reason, result}).
-record(m_role_enter_tos, {roleid}).
-record(m_role_enter_toc, {succ=true, reason, result}).
-record(m_vw_enter_tos, {vwid}).
-record(m_vw_enter_toc, {succ=true, return_self=true, reason, result, roleid, game_role}).
-record(m_vw_quit_toc, {roleid}).
-record(p_map_tile, {tx, ty}).
-record(m_move_walk_path_tos, {bpx, bpy, path, epx, epy}).
-record(m_move_walk_path_toc, {succ=true, return_self=true, reason, roleid, bpx, bpy, path, epx, epy}).
-record(m_move_walk_tos, {dir, px, py, tx, ty}).
-record(m_move_walk_toc, {succ=true, reason, px, py, tx, ty}).
-record(p_move_pos_sync, {roleid, dir, px, py, tx, ty, speed}).
-record(m_move_pos_sync_toc, {synclist}).
-record(m_chat_private_tos, {to_roleid, to_rolename, body}).
-record(m_chat_private_toc, {succ=true, return_self=true, reason, from_roleid, from_rolename, body}).
-record(m_chat_world_tos, {to_roleid, to_rolename, body}).
-record(m_chat_world_toc, {succ=true, return_self=true, reason, from_roleid, from_rolename, body}).
-record(p_team_role, {roleid, rolename, sex, skinid, vwid, x, y, level, team_order, is_leader=false, is_follow=false, is_offline=false, offline_time}).
-record(p_team_role_list, {role}).
-record(m_team_list_toc, {succ=true, reason, result, teamid, list}).
-record(m_team_create_toc, {succ=true, reason, result, teamid, list}).
-record(m_team_invite_tos, {roleid}).
-record(m_team_invite_toc, {succ=true, return_self=true, reason, roleid, rolename, teamid}).
-record(m_team_accept_tos, {teamid}).
-record(m_team_accept_toc, {succ=true, return_self=true, reason, list, roleid, rolename, teamid}).
-record(m_team_refuse_tos, {teamid}).
-record(m_team_refuse_toc, {roleid, rolename, teamid}).
-record(m_team_leave_tos, {teamid}).
-record(m_team_leave_toc, {succ=true, return_self=true, reason, list, roleid, rolename, teamid}).
-record(m_team_offline_toc, {list, roleid, rolename, teamid}).
-record(m_team_follow_tos, {teamid, set_follow}).
-record(m_team_follow_toc, {succ=true, return_self=true, reason, set_follow, roleid, rolename, teamid}).
-record(m_team_change_leader_tos, {teamid, roleid, rolename}).
-record(m_team_change_leader_toc, {succ=true, return_self=true, reason, list, roleid, rolename, teamid}).
-record(m_team_kick_toc, {succ=true, return_self=true, reason, teamid, roleid, rolename, list}).
-record(m_team_kick_tos, {roleid, teamid}).
-record(m_chat_bubble_tos, {body}).
-record(m_chat_bubble_toc, {succ=true, return_self=true, reason, from_roleid, from_rolename, body}).
-record(p_fight_effect, {effect_type, effect_value}).
-record(m_fight_attack_tos, {dest_roleid, skillid}).
-record(m_fight_attack_toc, {succ=true, return_self=true, reason, src_roleid, dest_roleid, skillid, src_effect, dest_effect}).
-record(m_equip_change_tos, {equip_slot_num, equipid}).
-record(m_equip_change_toc, {succ=true, return_self=true, reason, roleid, equip_slot_num, equipid}).
